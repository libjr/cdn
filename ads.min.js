if("/"===window.location.pathname||"/index.html"===window.location.pathname){let e=[],t=0;const n=4;let a;const i="47a1a7df542d3d483227f758a7317dff",r=document.getElementById("movies"),s=document.getElementById("tvSeries"),o=(document.getElementById("marvel"),document.getElementById("anime")),l=(document.getElementById("netflix"),document.getElementById("vivamax")),c=document.getElementById("search"),d=document.getElementById("searchResults"),p=document.getElementById("mediaSelect"),g=149142,u=document.getElementById("horror"),h=document.getElementById("war"),v=document.getElementById("korean"),m=document.getElementById("chinese");async function fetchMovies(){try{const e=await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${i}`);displayMovies((await e.json()).results.slice(0,10))}catch(e){displayError("Error fetching popular movies")}}async function fetchHorrorMovies(){const e=`https://api.themoviedb.org/3/discover/movie?api_key=${i}&with_genres=27`;try{const t=await fetch(e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const n=await t.json();displayHorrorMovies(n.results.filter((e=>e.genre_ids&&e.genre_ids.includes(27))).slice(0,10))}catch(e){displayError("Error fetching horror movies")}}async function fetchTVSeries(){try{const e=await fetch(`https://api.themoviedb.org/3/tv/top_rated?api_key=${i}&language=en-US&page=1`);displayTVSeries((await e.json()).results.slice(0,10))}catch(e){displayError("Error fetching popular TV series")}}async function fetchAnimeTVShows(){try{const e=await fetch(`https://api.themoviedb.org/3/keyword/210024/movies?api_key=${i}&language=en-US&page=1`);displayAnime((await e.json()).results.slice(0,10))}catch(e){displayError("Error fetching anime TV shows")}}async function fetchVivamaxMovies(){try{const e=await fetch(`https://api.themoviedb.org/3/company/${g}/movies?api_key=${i}&language=en-US`);displayVivamax((await e.json()).results.slice(0,10))}catch(e){displayError("Error fetching Vivamax movies")}}async function fetchWarMovies(){try{const e=await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${i}&with_genres=10752&sort_by=popularity.desc&language=en-US&page=1`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();displayWarMovies(t.results.filter((e=>e.genre_ids&&e.genre_ids.includes(10752))).slice(0,10))}catch(e){displayError("Error fetching war movies")}}async function fetchKoreanContent(){try{const e=await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${i}&with_original_language=ko&sort_by=popularity.desc&page=1&include_adult=false&vote_count.gte=100&vote_average.gte=6`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();displayKoreanContent(t.results.filter((e=>{const t=(e.title||e.name||"").toLowerCase(),n=(e.overview||"").toLowerCase();return!["adult","erotic","sex","porn","xxx","18+","mature"].some((e=>t.includes(e)||n.includes(e)))})).slice(0,10))}catch(e){displayError("Error fetching Korean content")}}async function fetchChineseContent(){try{const e=await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${i}&with_original_language=zh&sort_by=popularity.desc&page=1&include_adult=false&vote_count.gte=100&vote_average.gte=6`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();displayChineseContent(t.results.filter((e=>{const t=(e.title||e.name||"").toLowerCase(),n=(e.overview||"").toLowerCase();return!["adult","erotic","sex","porn","xxx","18+","mature"].some((e=>t.includes(e)||n.includes(e)))})).slice(0,10))}catch(e){displayError("Error fetching Chinese content")}}function initializeSwiper1(){return new Swiper(".swiper-popular",{loop:!1,speed:1e3,grabCursor:!0,spaceBetween:15,slidesPerView:"auto",centeredSlides:!1,loopFillGroupWithBlank:!0,autoplay:{delay:2e3,disableOnInteraction:!1,pauseOnMouseEnter:!0},scrollbar:{el:".swiper-scrollbar",hide:!0,draggable:!0},lazy:{loadOnTransitionStart:!0,loadPrevNext:!0},observer:!0,observeParents:!0})}function initializeSwiper2(){new Swiper(".swiper-2",{loop:!1,speed:1e3,grabCursor:!0,spaceBetween:15,centeredSlides:!1,freeMode:!0,slidesPerView:"auto",lazy:{loadOnTransitionStart:!0,loadPrevNext:!0},scrollbar:{draggable:!0,hide:!1},observer:!0,observeParents:!0,on:{init:function(){this.update()}}})}function initializeProgressBars(){document.querySelectorAll(".circular-progress").forEach((e=>{const t=parseFloat(e.getAttribute("data-rating")),n=e.getAttribute("data-progress-color"),a=e.getAttribute("data-bg-color");e.style.background=`conic-gradient(\n            ${n} ${36*t}deg, \n            ${a} ${36*t}deg\n        )`}))}async function fetchMovieImages(e){const t=await fetch(`https://api.themoviedb.org/3/movie/${e}/images?api_key=${i}&language=en`),n=await t.json();if(n.backdrops.length>0)return n.backdrops[0].file_path;const a=await fetch(`https://api.themoviedb.org/3/movie/${e}/images?api_key=${i}`),r=await a.json();return r.backdrops.length>0?r.backdrops[0].file_path:null}async function displayDetails(e,t,n){const a=await fetchMovieImages(t.id),i=a?`https://image.tmdb.org/t/p/w500${a}`:"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg-VLNDBGMO8xZGWlbLfDKXa2RCqhljShc38FN-h7tFSTRnBAdqvf-5m6GQp3dxhQozWbRAe7d2AHlBae3sII-p0w9tDHVY1_nvg45mAs6K9b-fNnmvGFyhOcTqxzuYxNEW1MoEbHdeNvNoTM4QG3XCe5S_QBhSLfjSXnl9EIL4Kns3t0B175ymTH6d/s1600/QQQ.jpg";e.innerHTML=`\n        <a href='/p/watchingonstreamlad.html?movieId=${t.id}'>\n            <div class='poster-wrapper'>\n                <div class='play-hover'>\n                    <div class='playBut'>\n                        <svg enable-background='new 0 0 213.7 213.7' height='100%' version='1.1' viewBox='0 0 213.7 213.7' width='100%' x='0px' xml:space='preserve' xmlns='http://www.w3.org/2000/svg'>\n                            <polygon class='triangle' fill='none' points='73.5,62.5 148.5,105.8 73.5,149.1' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='10' stroke-width='7'></polygon>\n                            <circle class='circle' cx='106.8' cy='106.8' fill='none' r='103.3' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='10' stroke-width='7'></circle>\n                        </svg>\n                    </div>\n                </div>\n                <img alt='${t.title}' class='lazy-load' data-src='${i}' loading='lazy'/>\n            </div>\n            <div class='circular-progress' data-bg-color='black' data-inner-circle-color='lightgrey' data-progress-color='#005a94' data-rating='${n}'>\n                <div class='inner-circle'></div>\n                <p class='rating'>${n.toFixed(1)}</p>\n            </div>\n            <div class='title-year-wrapper'>\n                <h3>${t.title}</h3>\n                <p class='released-year'>${new Date(t.release_date).getFullYear()}</p>\n            </div>\n        </a>`,initializeProgressBars(),lazyLoadImages()}async function fetchTVImages(e){const t=await fetch(`https://api.themoviedb.org/3/tv/${e}/images?api_key=${i}&language=en`),n=await t.json();if(n.backdrops.length>0)return n.backdrops[0].file_path;const a=await fetch(`https://api.themoviedb.org/3/tv/${e}/images?api_key=${i}`),r=await a.json();return r.backdrops.length>0?r.backdrops[0].file_path:null}async function displaytvDetails(e,t,n){const a=await fetchTVImages(t.id),i=a?`https://image.tmdb.org/t/p/w500${a}`:"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg-VLNDBGMO8xZGWlbLfDKXa2RCqhljShc38FN-h7tFSTRnBAdqvf-5m6GQp3dxhQozWbRAe7d2AHlBae3sII-p0w9tDHVY1_nvg45mAs6K9b-fNnmvGFyhOcTqxzuYxNEW1MoEbHdeNvNoTM4QG3XCe5S_QBhSLfjSXnl9EIL4Kns3t0B175ymTH6d/s1600/QQQ.jpg";e.innerHTML=`\n        <a href='/p/watchingonstreamlad.html?tvId=${t.id}'>\n            <div class='poster-wrapper'>\n                <div class='play-hover'>\n                    <div class='playBut'>\n                        <svg enable-background='new 0 0 213.7 213.7' height='100%' version='1.1' viewBox='0 0 213.7 213.7' width='100%' x='0px' xml:space='preserve' xmlns='http://www.w3.org/2000/svg'>\n                            <polygon class='triangle' fill='none' points='73.5,62.5 148.5,105.8 73.5,149.1' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='10' stroke-width='7'></polygon>\n                            <circle class='circle' cx='106.8' cy='106.8' fill='none' r='103.3' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='10' stroke-width='7'></circle>\n                        </svg>\n                    </div>\n                </div>\n                <img alt='${t.name}' class='lazy-load' data-src='${i}' loading='lazy'/>\n            </div>\n            <div class='circular-progress' data-bg-color='black' data-inner-circle-color='lightgrey' data-progress-color='#005a94' data-rating='${n}'>\n                <div class='inner-circle'></div>\n                <p class='rating'>${n.toFixed(1)}</p>\n            </div>\n            <div class='title-year-wrapper'>\n                <h3>${t.name}</h3>\n                <p class='released-year'>${new Date(t.first_air_date).getFullYear()}</p>\n            </div>\n        </a>`,initializeProgressBars(),lazyLoadImages()}function lazyLoadImages(){const e=document.querySelectorAll(".lazy-load"),t=new IntersectionObserver(((e,t)=>{e.forEach((e=>{if(e.isIntersecting){const n=e.target;n.src=n.getAttribute("data-src"),n.classList.remove("lazy-load"),t.unobserve(n)}}))}),{root:null,rootMargin:"0px",threshold:.1});e.forEach((e=>{const n=Math.round(281.25);e.setAttribute("width",500),e.setAttribute("height",n),t.observe(e)}))}async function displayContent(e,t,n=!0){e.innerHTML="";const a=t.map((async t=>{const a=document.createElement("div");a.className="swiper-slide";const i=t.vote_average;n?await displayDetails(a,t,i):await displaytvDetails(a,t,i),e.appendChild(a)}));await Promise.all(a),n?initializeSwiper1():initializeSwiper2()}function displayMovies(e){displayContent(r,e,!0)}function displayTVSeries(e){displayContent(s,e,!1)}function displayHorrorMovies(e){displayContent(u,e,!0)}function displayAnime(e){displayContent(o,e,!0)}function displayVivamax(e){displayContent(l,e,!0)}function displayWarMovies(e){displayContent(h,e,!0)}function displayKoreanContent(e){displayContent(v,e,!0)}function displayChineseContent(e){displayContent(m,e,!0)}function toggleSectionsVisibility(e){const t=document.getElementById("backgroundWrapper");["PopularMovies","Horror","TVSeries","Anime","Vivamax","War","Korean","Chinese"].forEach((t=>{document.getElementById(t).style.display=e?"none":"block"})),t.style.display=e?"none":"block"}async function searchMedia(){const e=c.value.trim(),t=p.value;if(e.length<1)return toggleSectionsVisibility(!1),void(d.innerHTML="");toggleSectionsVisibility(!0);try{const n=await fetch(`https://api.themoviedb.org/3/search/${t}?api_key=${i}&query=${e}&include_adult=false`),a=await n.json();a.results&&a.results.length>0?displaySearchResults(a.results,t):d.innerHTML="<p>No results found.</p>"}catch(e){d.innerHTML="<p>Error fetching results. Please try again later.</p>"}}function displaySearchResults(e,t){d.innerHTML="",e.forEach((e=>{if(e.vote_average>0&&e.poster_path){const n=document.createElement("div");n.className="search-image";const a=e.vote_average;n.innerHTML=`\n                <a href='/p/watchingonstreamlad.html?${t}Id=${e.id}'>\n                    <div class='search-poster-container'>\n                        <div class='play-hover'>\n                            <div class='playBut'>\n                                <svg enable-background='new 0 0 213.7 213.7' height='100%' version='1.1' viewBox='0 0 213.7 213.7' width='100%' x='0px' xml:space='preserve' xmlns='http://www.w3.org/2000/svg'>\n                                    <polygon class='triangle' fill='none' points='73.5,62.5 148.5,105.8 73.5,149.1' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='10' stroke-width='7'></polygon>\n                                    <circle class='circle' cx='106.8' cy='106.8' fill='none' r='103.3' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='10' stroke-width='7'></circle>\n                                </svg>\n                            </div>\n                        </div>\n                        <img alt='${e.title||e.name}' src='https://image.tmdb.org/t/p/w500${e.poster_path}'/>\n                    </div>\n                    <div class='circular-progress' data-bg-color='black' data-inner-circle-color='lightgrey' data-progress-color='#005a94' data-rating='${a}'>\n                        <div class='inner-circle'>\n                            <p class='rating'>${a.toFixed(1)}</p>\n                        </div>\n                    </div>\n                    <div class='search-title-year'>\n                        <h3 class='search-title'>${e.title||e.name}</h3>\n                        <h3 class='search-year'>${"movie"===t?new Date(e.release_date).getFullYear():new Date(e.first_air_date).getFullYear()}</h3>\n                    </div>\n                </a>`,d.appendChild(n),initializeProgressBars()}}))}async function getRandomTrending(){const e=`https://api.themoviedb.org/3/trending/all/day?api_key=${i}`;try{const t=await fetch(e),a=await t.json(),r=[],s=new Set;for(;r.length<n&&s.size<a.results.length;){const e=Math.floor(Math.random()*a.results.length);s.has(e)||(s.add(e),r.push(a.results[e]))}return await Promise.all(r.map((async e=>{const t=`https://api.themoviedb.org/3/${e.media_type}/${e.id}?api_key=${i}`,n=await fetch(t),a=await n.json();return{...e,...a}})))}catch(e){return null}}function updateBackgroundWrapper(e){const t=document.getElementById("backgroundWrapper"),n=e.runtime||e.episode_run_time?.[0]||0,a=`${Math.floor(n/60)}h ${n%60}m`,i=e.genres?.[0]?.name||"N/A",r=new Date(e.release_date||e.first_air_date).getFullYear(),s=e.tagline||"",o=window.innerWidth<=768?150:550;let l=e.overview||"No overview available.";l.length>o&&(l=l.substring(0,o)+"...");const c=`https://image.tmdb.org/t/p/${window.innerWidth<=768?"w500":"w780"}${e.backdrop_path||"/default-backdrop.jpg"}`,d=`\n        <div class='background'>\n            <button class='nav-btn prev-btn'>‹</button>\n            <button class='nav-btn next-btn'>›</button>\n            <div class='movie-intro'>\n                <h1>${e.title||e.name}</h1>\n                ${s?`<div class="tagline">${s}</div>`:""}\n                <div class="movie-labels">\n                    <span class="label">${r}</span>\n                    <div class="vertical-line"></div>\n                    <span class="label">${a}</span>\n                    <div class="vertical-line"></div>\n                    <span class="label">${i}</span>\n                </div>\n                <p>${l}</p>\n            </div>\n            <div class='dark'></div>\n            <div class='bg-image'>\n                <img alt='' class='back' data-src='${c}' />\n                <div class='shade'></div>\n            </div>\n        </div>\n    `;t.innerHTML=d;const p=t.querySelector(".back"),g=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&(e.target.src=e.target.dataset.src,g.unobserve(e.target))}))}),{threshold:.1});g.observe(p);const u=t.querySelector(".prev-btn"),h=t.querySelector(".next-btn");u.addEventListener("click",showPrevious),h.addEventListener("click",showNext),setTimeout((()=>{t.querySelector(".background").classList.add("active")}),50)}function showPrevious(){t=(t-1+n)%n;document.querySelector(".background").classList.remove("active"),setTimeout((()=>{updateBackgroundWrapper(e[t])}),300),resetAutoSlide()}function showNext(){t=(t+1)%n;document.querySelector(".background").classList.remove("active"),setTimeout((()=>{updateBackgroundWrapper(e[t])}),300),resetAutoSlide()}function startAutoSlide(){a&&clearInterval(a),a=setInterval((()=>{showNext()}),8e3)}function resetAutoSlide(){a&&clearInterval(a),startAutoSlide()}async function initializeRandomBackground(){const n=await getRandomTrending();n&&(e=n,t=0,updateBackgroundWrapper(e[t]),startAutoSlide()),setInterval((async()=>{const n=await getRandomTrending();n&&(e=n,t=0,updateBackgroundWrapper(e[t]),resetAutoSlide())}),3e5)}c.addEventListener("input",searchMedia),p.addEventListener("change",(()=>{c.value="",d.innerHTML=""})),document.addEventListener("contextmenu",(e=>e.preventDefault())),document.addEventListener("keydown",(e=>{("F12"===e.key||e.ctrlKey&&e.shiftKey&&"I"===e.key)&&e.preventDefault()})),document.addEventListener("DOMContentLoaded",(()=>{fetchMovies(),fetchHorrorMovies(),fetchTVSeries(),fetchAnimeTVShows(),fetchVivamaxMovies(),fetchWarMovies(),fetchKoreanContent(),fetchChineseContent()})),initializeRandomBackground(),document.getElementById("brand").addEventListener("click",(function(){var e=document.getElementById("nav-links"),t=document.querySelector(".branding-letter .stream");e.classList.toggle("active"),e.classList.contains("active")?t.classList.add("hidden"):t.classList.remove("hidden")}))}
